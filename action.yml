name: 'Deploy CDF Groups with Datasets, RAW DBs'
description: 'Deploy (aka bootstrap) CDF Groups, Data-Sets and RAW DBs from a yaml manifest'
inputs:
  # cdf
  cluster:
    description: 'CDF Cluster'
    required: false
    default: 'westeurope-1'
  cdf-project-name:
    description: 'CDF project name (only required when using OAuth2 credentials)'
    required: false
  api-key:
    description: 'API key for authenticating with CDF'
    required: false
  # cdf idp
  client-id:
    description: 'OAuth2 client ID'
    required: false
  client-secret:
    description: 'OAuth2 client secret'
    required: false
  scopes:
    description: 'List of OAuth2 scopes (space separated)'
    required: false
  token-url:
    description: 'Token url to use for fetching OAuth2 tokens'
    required: false
  audience:
    description: 'OAuth2 audience'
    required: false
  # 'deploy' command parameters
  config_file:
    description: >-
      The path to a yaml file containing Bootstrap Pipeline configuration.
      This is relative to $GITHUB_WORKSPACE,
      which will be the root of the repository when using actions/checkout with default settings.
    required: true
  with_special_groups:
    description: >-
      yes/no string-flag, for creating special CDF Groups, which don't have capabilities (extractions, transformations)
    required: false
    default: 'no'
  with_raw_capability:
    description: >-
      yes/no string-flag, for creating RAW DBs and 'rawAcl' capability.
    required: false
    default: 'yes'

runs:
  using: 'docker'
  image: 'Dockerfile'
  env:
    BOOTSTRAP_API_KEY: ${{ inputs.api-key }}
    BOOTSTRAP_TOKEN_URL: ${{ inputs.token-url }}
    BOOTSTRAP_PROJECT: ${{ inputs.cdf-project-name }}
    BOOTSTRAP_CLIENT_ID: ${{ inputs.client-id }}
    BOOTSTRAP_CLIENT_SECRET: ${{ inputs.client-secret }}
    BOOTSTRAP_SCOPES: ${{ inputs.scopes }}
    BOOTSTRAP_AUDIENCE: ${{ inputs.audience }}
    BOOTSTRAP_CLUSTER: "${{ inputs.cluster }}"
  args:
    - "--debug"
    - "deploy"
    - "--with-special-groups=${{ inputs.with_special_groups }}"
    - "--with-raw-capability=${{ inputs.with_raw_capability }}"
    - "${{ inputs.config_file }}"
