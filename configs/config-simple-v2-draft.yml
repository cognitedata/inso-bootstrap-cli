bootstrap:

  features:
  #   # available as cli paramaters only atm
    # with-special-groups: yes
    # with-raw-capability: yes
  #   # default hard-coded names atm, which might be required to change
    group-prefix: 'xyz'
    aggregated-level-name: all
  #   dataset-suffix: dataset
  #   # not sure about providing multiple datasets per ns-name, atm it is only one
  #   rawdb-suffix: rawdb
    rawdb-additional-variants:
  #     # provide more than one rawdb per ns-nodes
  #     # atm hardcoded is one additional rawdb
      - state
      - pump

  idp-cdf-mappings:
    # mappings are different for dev/test/prod CDF Projects
    # including all mappings into one config is an optimization, and reduces the need of redundant maintenance
    # BOOTSTRAP_CDF_PROJECT env-variable is available and can be used to select
    - cdf-project: shiny-dev
      mappings:
      - cdf-group: cdf:root
        # use AAD or CDF or like here a mix of boths for naming the AAD Group object-id and name?
        idp-source-id: 374dc9f6-f3a1-4b34-b897-11111111111
        idp-source-name: CDF_DEV_ROOT
      - cdf-group: cdf:allprojects:owner
        idp-source-id: acd2fe35-aa51-45a7-acef-11111111111
        idp-source-name: CDF_DEV_ALLPROJECTS_READ
      - cdf-group: cdf:uc:001:demand:read
        idp-source-id: 314159-aa51-45a7-acef-11111111111
        idp-source-name: CDF_DEV_UC001DEMAND_READ
    - cdf-project: shiny-prod
      mappings:
      - cdf-group: cdf:root
        # use AAD or CDF or like here a mix of boths for naming the AAD Group object-id and name?
        idp-source-id: 374dc9f6-f3a1-4b34-b897-22222222222
        idp-source-name: CDF_PROD_ROOT
      - cdf-group: cdf:allprojects:owner
        idp-source-id: acd2fe35-aa51-45a7-acef-22222222222
        idp-source-name: CDF_PROD_ALLPROJECTS_READ
      - cdf-group: cdf:uc:001:demand:read
        idp-source-id: 314159-aa51-45a7-acef-22222222222
        idp-source-name: CDF_PROD_UC001DEMAND_READ

  namespaces:
    - ns-name: src
      description: Customer source-systems
      ns-nodes:
        - node-name: src:001:sap
          description: Sources 001; from SAP
          # if not provided explicit for the dataset it will be autogenerated
          external_id: src:001:sap
        - node-name: src:002:weather
          description: Sources 002; from Weather.com
          # external_id: src:002:weather
    - ns-name: in
      description: End user data-input provided through deployed CDF driven solutions
      ns-nodes:
        - node-name: in:001:trade
          description: Description about user inputs related to name
          # external_id: in:001:trade
    - ns-name: uc
      description: Use Cases representing the data-products
      ns-nodes:
        - node-name: uc:001:demand
          description: Use Case 001; Supply and Demand
          metadata:
            created: 220401
            generated: by cdf-config-hub script
          shared-access:
            read:
              - node-name: src:001:sap
              - node-name: src:002:weather
            owner:
              - node-name: in:001:trade

# follows the same parameter structure as the DB extractor configuration
cognite: # kwargs to pass to the CogniteClient, Environment variable format: ${ENVIRONMENT_VARIABLE}
  # host: https://${BOOTSTRAP_CDF_CLUSTER}.cognitedata.com/
  host: ${BOOTSTRAP_CDF_HOST}
  project: ${BOOTSTRAP_CDF_PROJECT}
  #
  # AAD IdP login credentials:
  #
  idp-authentication:
    client-id: ${BOOTSTRAP_IDP_CLIENT_ID}
    secret: ${BOOTSTRAP_IDP_CLIENT_SECRET}
    scopes:
      - ${BOOTSTRAP_IDP_SCOPES}
    token_url: ${BOOTSTRAP_IDP_TOKEN_URL}
    # only requiered for ADFS
    # resource: ${CDF_IDP_RESOURCE}

logger:
  file:
    path: ./logs/create-dev-logs.log
    level: INFO
  console:
    level: INFO
